{"version":3,"sources":["components/YearSelector.jsx","components/UsernameInput.jsx","components/RepositoryInput.jsx","components/SingleCommit.jsx","components/CommitsBoard.jsx","components/GenerateScript.jsx","components/Navigation.jsx","App.js","index.js"],"names":["YearSelector","props","sendYear","year","changeState","handleChange","e","parseInt","target","value","state","currentYear","Date","getFullYear","className","TextField","this","onChange","id","label","type","React","Component","UserNameInput","sendGithub","github","debounce","text","selected","classes","root","autoFocus","color","shrink","RepositoryInput","sendRepo","repo","SingleCommit","handleRightClick","preventDefault","commits","handleClick","allowDrawOnMouseOver","count","style","backgroundColor","onClick","onDragEnter","onContextMenu","getDayOfMonth","month","isLeap","yearDays","CommitsBoard","offset","date","dayOfWeek","getDay","isNaN","getWeekday","undefined","commitsArray","currentDay","currentMonth","currentMonthDays","i","insideAr","j","push","handleSubmit","scriptLines","gitStr","scriptLine","ar","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","TextFile","GenerateScript","Navigation","App","getColorGroup","commitsCount","maxCommits","colorValues","percent","commits0","commits1","commits2","commits3","commits4","eventType","maxFreq","setState","rerenderColors","key","isWrongInput","isValidGithub","isValidYear","isValidRepo","minCommits","inputCompleted","disabled","name","for","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cc67cc7e.chunk.js","sourcesContent":["import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button';\nimport debounce from 'lodash/debounce'\n\nclass YearSelector extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n             currentYear: new Date().getFullYear()\n        }\n    }\n\n    componentDidMount() {\n        // this.sendYear = debounce(this.sendYear, 300);\n    }\n\n    sendYear = (year) => {\n        this.props.changeState('year', year)\n    }\n\n    handleChange = (e) => {\n        let year = parseInt(e.target.value);\n        year = year < 1900 ? 1900 : year\n        year = (year > this.state.currentYear) ? this.state.currentYear : year;\n        this.sendYear(year);\n    }\n\n    render() {\n        return (\n            <div className=\"yearSelector\">\n                <TextField\n                    value = {this.props.year}\n                    onChange={this.handleChange}\n                    id=\"standard-textarea\"\n                    label=\"Enter Year\"\n                    type=\"number\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default YearSelector;\n","import React from 'react' \nimport TextField from '@material-ui/core/TextField'\nimport debounce from 'lodash/debounce'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default class UserNameInput extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            github: props.github,\n        }\n    }\n\n    componentDidMount() {\n        this.sendGithub = debounce(this.sendGithub, 300);\n    }\n\n    sendGithub = (github) => {\n        this.props.changeState('github', github);\n    }\n\n    handleChange = (e) => {\n        this.sendGithub(e.target.value);\n    }\n\n    render() {\n        const {text} = this.state;\n        return (\n            <TextField\n                selected classes={{ root: 'MenuItem', selected: 'selected' }}\n                onChange={this.handleChange}\n                id=\"standard-textarea\"\n                // value={text}\n                label='Github'\n                autoFocus=\"true\"\n                color=\"primary\"\n                shrink=\"true\"\n            />\n        )\n    }\n}","import React from 'react' \nimport TextField from '@material-ui/core/TextField'\nimport debounce from 'lodash/debounce'\n\nexport default class RepositoryInput extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.sendRepo = debounce(this.sendRepo, 300);\n    }\n\n    sendRepo = (repo) => {\n        this.props.changeState('repo', repo);\n    }\n\n    handleChange = (e) => {\n        this.sendRepo(e.target.value)\n    }\n\n\n\n    render() {\n        return (\n            <TextField\n                onChange={this.handleChange}\n                id=\"standard-textarea\"\n                label=\"Repo Name\"\n            />\n        )\n    }\n}","\nimport React from 'react'\n\nexport default class SingleCommit extends React.Component {\n\n    handleRightClick = (e) => {\n        e.preventDefault();\n    }\n\n    render() {\n        const {commits, handleClick, id, allowDrawOnMouseOver} = this.props\n        const color = (commits[id]) ? commits[id].color : '#EBEDF0'\n        const count = (commits[id]) ? commits[id].count : 0\n        return (\n        <div className=\"commit\" \n            id={id}\n            style={{ \n            backgroundColor: color }} \n            onClick={handleClick}\n            onDragEnter={handleClick}\n            // onMouseEnter={allowDrawOnMouseOver && handleClick}\n            onContextMenu={handleClick}>{count}</div>\n        )\n    }\n}\n\n    // increaseCount = () => {\n    //     this.setState({commitsCount: this.state.commitsCount+1})\n    // }\n\n    // decreaseCount = () => {\n    //     const {commitsCount} = this.state;\n    //     commitsCount > 0 && this.setState({commitsCount: this.state.commitsCount-1})\n    // }\n\n    // handleClick = (e) => {\n    //     const {commitsData} = this.props\n    //     e.preventDefault();\n    //     const {id} = e.target\n    //     this.props.updateCommits(id)\n    //     const color = commitsData[id].color\n    //     const {commitsCount} = this.state\n    //     this.setState({clicked:true, color, commitsCount})\n    // }\n\n    // setColor = (id) => {\n    //     const max = this.props.getMaxCommits()\n    //     console.log('max in commit', max)\n    //     const commitsCount = this.props.commitsData[id];\n    //     console.log('commitscount in commit', commitsCount)\n    //     const {colorValues} = this.props;\n    //     const percent = (max==0) ? 0 : commitsCount/max * 100;\n    //     let color = '';\n\n    //     console.log('percent', percent);\n\n    //     if(percent === 0) color = colorValues.commits0\n    //     else if(percent <25) color = colorValues.commits1\n    //     else if(percent <50) color = colorValues.commits2\n    //     else if(percent <75) color = colorValues.commits3\n    //     else color = colorValues.commits4;\n    //     this.setState({color, commitsCount})\n    // }","import React from 'react'\nimport yearDays from 'year-days'\nimport SingleCommit from './SingleCommit'\n\n\nfunction getWeekday(year) {\n    //get the day of 31 dec of the year\n    const date = `${year}-12-31`\n    const dayOfWeek = new Date(date).getDay(); \n    // return isNaN(dayOfWeek) ? null : \n    // ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\n    return isNaN(dayOfWeek) ? null : (dayOfWeek+1)%7;\n}\n\nfunction getDayOfMonth(month, year) {\n    const isLeap = yearDays(parseInt(year)) === 366 ? true : false\n    const months = [\n        31, //jan\n        isLeap ? 29 : 28, //feb\n        31, //mar\n        30, //apr\n        31, //may\n        30, //jun\n        31, //jul\n        31, //aug\n        30, //sep\n        31, //oct\n        30, //nov\n        31, //dec\n    ]\n    \n    return (month>=0 && month<=12) ?  months[month-1] : null;\n}\n\nfunction CommitsBoard(props) {\n    const {handleClick, commits, allowDrawOnMouseOver} = props;\n    let {year} = props;\n    year = (year === undefined || year===null) ? 0 : year;\n    const remainingDays = getWeekday(year) //returns days remaining to render for commitsboard\n    const cellsCount = 52 * 7 + remainingDays\n    const daysOfYear = yearDays(parseInt(year));\n    let offset = cellsCount - daysOfYear;\n\n    const commitsArray = []\n    let currentDay = 1;\n    let currentMonth = 1;\n    let currentMonthDays = getDayOfMonth(currentMonth, year);\n    //render all cells\n    for(let i=0; i<53; i++) {\n        const insideAr = []\n        for(let j=0; j<7; j++) {\n            if(currentMonth >12) {\n                break;\n            }\n            if (offset >= 0) {\n                //render a dummy single commit with no props\n                insideAr.push(<SingleCommit commits={commits} id={i+j} className = \"commit\"/>)\n                offset --;\n            } else {\n                const id = `${year}-${currentMonth<10 ? '0'+currentMonth : currentMonth}-${currentDay<10 ? '0'+currentDay : currentDay}`\n                insideAr.push(<SingleCommit\n                                    className = \"commit\" \n                                    id = {id}\n                                    year={year} \n                                    handleClick={handleClick} \n                                    commits={commits} \n                                    allowDrawOnMouseOver={allowDrawOnMouseOver} />)\n                currentDay++;\n                if(currentDay > currentMonthDays) {\n                    currentDay = 1;\n                    currentMonth++;\n                    currentMonthDays = getDayOfMonth(currentMonth, year);\n                }\n            }\n        }\n\n        commitsArray.push(<div className='cols'>{insideAr}</div>)\n    }\n\n    return commitsArray\n  }\n\nexport default CommitsBoard","import React from 'react'\n\nconst TextFile = (ar) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob(ar, { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = \"gitpicasso.sh\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n}\n\n\n    const checkGithub = async (username, repo) => {\n        const response = await fetch(`https://github.com/${username}/${repo}`)\n        const status = response.status === 200 ? true : false;\n        //return false if the github credentials invalid\n        console.log('status', status)\n        return status\n    }\n\n\nfunction handleSubmit(commits, repo, github) {\n    const scriptLines = [];\n    const gitStr = 'gitpicasso'\n    scriptLines.push(`#!/bin/bash\\n`)\n    scriptLines.push(`REPO=${repo}\\n`)\n    scriptLines.push('git init $REPO\\n')\n    scriptLines.push(`cd $REPO\\n`)\n    scriptLines.push(`touch README.md\\n`)\n    scriptLines.push(`git add README.md\\n`)\n    scriptLines.push(`touch ${gitStr}\\n`)\n    scriptLines.push(`git add ${gitStr}\\n`)\n\n    //get commits key\n    //convert extract only date part\n    //no need id's already render what we need\n    //read the count\n    //run for loop for each count\n    for (let date in commits) {\n        for (let i = 0; i < commits[date].count; i++) {\n            let scriptLine = `GIT_AUTHOR_DATE=${date}T12:00:00 GIT_COMMITTER_DATE=${date}T12:00:00 git commit --allow-empty -m \"${gitStr}\" > /dev/null\\n`\n            scriptLines.push(scriptLine)\n        }\n    }\n    scriptLines.push(`git remote add origin git@github.com:${github}/$REPO.git\\n`)\n    scriptLines.push(`git pull origin master --allow-unrelated-histories\\n`)\n    scriptLines.push('git push -u origin master\\n')\n\n\n    TextFile(scriptLines);\n    return scriptLines;\n}\n/*\n2020-01-01-commit: {count: 3, color: \"#216E39\"}\n2020-01-08-commit: {count: 1, color: \"#40C462\"}\n2020-03-16-commit: {count: 1, color: \"#40C462\"}\n2020-04-09-commit: {count: 3, color: \"#216E39\"}\n2020-04-19-commit: {count: 2, color: \"#30A14E\"}\n2020-06-16-commit: {count: 3, color: \"#216E39\"}\n*/\n\n\nfunction GenerateScript(props) {\n\n    const { commits, repo, github } = props;\n\n    if (!commits || !repo || !github) {\n        return (\n            <div>\n                <h4 className='errorMsg'>Please fill all the fields</h4>\n            </div>\n\n        )\n    }\n    return (\n        <div>\n            <button className=\"generate-btn\" onClick={\n                () => handleSubmit(commits, repo, github)\n            }>Generate the Script</button>\n\n        </div>\n\n    )\n}\n\nexport default GenerateScript","import React from 'react'\n\nexport default function Navigation() {\n    return <nav>\n        <ul>\n            <li>Home</li>\n            <li>How to Use</li>\n            <li>About</li>\n            <li><a href=\"https://github.com/aliqsson-greenborders/github-picasso\">GitHub</a></li>\n        </ul>\n    </nav>\n}","import React from \"react\";\nimport { config } from \"dotenv\";\nimport YearSelector from \"./components/YearSelector\";\nimport UsernameInput from \"./components/UsernameInput\";\nimport RepositoryInput from \"./components/RepositoryInput\";\nimport \"./App.css\";\nimport CommitsBoard from \"./components/CommitsBoard\";\nimport GenerateScript from \"./components/GenerateScript\";\nimport Navigation from \"./components/Navigation\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allowDrawOnMouseOver: false,\n      isWrongInput: false,\n      github: \"\",\n      year: \"2020\",\n      repo: \"\",\n      isValidGithub: false,\n      isValidYear: false,\n      isValidRepo: false,\n      commits: {},\n      minCommits: 0,\n      maxCommits: 0,\n      maxFreq: 0,\n\n      colorValues: {\n        commits0: \"#EBEDF0\",\n        commits1: \"#9BE9A8\",\n        commits2: \"#40C462\",\n        commits3: \"#30A14E\",\n        commits4: \"#216E39\",\n      },\n    };\n  }\n\n  componentDidMount() {}\n\n  getColorGroup = (commitsCount) => {\n    const { maxCommits, colorValues } = this.state;\n    const percent = !commitsCount ? 0 : (commitsCount / maxCommits) * 100;\n    let color;\n    if (percent === 0) color = colorValues.commits0;\n    else if (percent < 25) color = colorValues.commits1;\n    else if (percent < 50) color = colorValues.commits2;\n    else if (percent < 75) color = colorValues.commits3;\n    else color = colorValues.commits4;\n    return color;\n  };\n\n  handleClick = (e) => {\n    const eventType = e.type;\n    e.preventDefault();\n    const { id } = e.target;\n    const { commits } = this.state;\n    let { maxCommits, maxFreq } = this.state;\n    if (commits[id]) {\n      if (commits[id].count === 10 && eventType !== \"contextmenu\") return;\n      if (eventType === \"contextmenu\" && commits[id].count > 0) {\n        commits[id].count--;\n      } else commits[id].count++;\n    } else {\n      commits[id] = {};\n      eventType === \"contextmenu\"\n        ? (commits[id].count = 0)\n        : (commits[id].count = 1);\n    }\n    commits[id].color = this.getColorGroup(commits[id].count);\n\n    if (commits[id].count > maxCommits) {\n      maxCommits = commits[id].count;\n      this.setState({\n        maxCommits,\n      });\n      this.rerenderColors();\n    }\n    this.setState({\n      commits,\n    });\n  };\n\n  rerenderColors = () => {\n    const { commits } = this.state;\n    for (let key in commits) {\n      commits[key].color = this.getColorGroup(commits[key].count);\n    }\n    this.setState(commits);\n  };\n\n  changeState = (key, value) => {\n    this.setState({\n      [key]: value,\n    });\n  };\n\n  render() {\n    const {\n      github,\n      year,\n      repo,\n      commits,\n      maxCommits,\n      inputCompleted,\n      allowDrawOnMouseOver,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <div className=\"window\">\n          <div className=\"title-bar\">\n            <p> Turn your GitHub into an Artboard </p>{\" \"}\n          </div>\n        <div className=\"window-body\">\n        <div className=\"inputs\" disabled>\n            <UsernameInput github={github} changeState={this.changeState} />{\" \"}\n            <YearSelector year={year} changeState={this.changeState} />{\" \"}\n            <RepositoryInput repo={repo} changeState={this.changeState} />{\" \"}\n          </div>{\" \"}\n          <div className=\"commits-board\">\n            <CommitsBoard\n              handleClick={this.handleClick}\n              commits={commits}\n              year={year}\n              allowDrawOnMouseOver={allowDrawOnMouseOver}\n            />{\" \"}\n            <div>\n              <input\n                type=\"checkbox\"\n                value=\"checkbox\"\n                name=\"allowmouseover\"\n                onChange={() => {\n                  const { allowDrawOnMouseOver } = this.state;\n                  this.setState({\n                    allowDrawOnMouseOver: !allowDrawOnMouseOver,\n                  });\n                }}\n              />{\" \"}\n              <label for=\"allowmouseover\"> Draw on MouseOver </label>{\" \"}\n            </div>{\" \"}\n            <div>\n              <GenerateScript commits={commits} github={github} repo={repo} />{\" \"}\n            </div>{\" \"}\n            <footer>\n              <h3> Current maxCommits: {maxCommits} </h3>{\" \"}\n              <h3> Max commits allowed: 10 </h3>{\" \"}\n            </footer>\n          </div>{\" \"}\n        </div>\n          \n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}