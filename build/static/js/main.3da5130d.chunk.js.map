{"version":3,"sources":["components/YearSelector.jsx","components/UsernameInput.jsx","components/RepositoryInput.jsx","components/SingleCommit.jsx","components/CommitsBoard.jsx","components/GenerateScript.jsx","components/Navigation.jsx","components/Taskbar.jsx","App.js","index.js"],"names":["YearSelector","props","sendYear","year","changeState","handleChange","e","parseInt","target","value","state","currentYear","Date","getFullYear","className","for","id","this","onChange","label","placeholder","type","React","Component","UserNameInput","sendGithub","github","debounce","text","autoFocus","RepositoryInput","sendRepo","repo","SingleCommit","handleRightClick","preventDefault","commits","handleClick","color","allowDrawOnMouseOver","count","style","backgroundColor","onClick","onDragEnter","onContextMenu","getDayOfMonth","month","isLeap","yearDays","CommitsBoard","offset","date","dayOfWeek","getDay","isNaN","getWeekday","undefined","commitsArray","currentDay","currentMonth","currentMonthDays","i","insideAr","j","push","handleSubmit","scriptLines","gitStr","scriptLine","ar","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","TextFile","GenerateScript","class","Navigation","maximizedStyle","position","top","left","width","height","margin","normalStyle","App","getColorGroup","commitsCount","maxCommits","colorValues","percent","commits0","commits1","commits2","commits3","commits4","eventType","maxFreq","setState","rerenderColors","key","maximize","toggle","currentStyle","close","querySelector","display","isWrongInput","isValidGithub","isValidYear","isValidRepo","minCommits","inputCompleted","aria-label","disabled","Taskbar","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3da5130d.chunk.js","sourcesContent":["import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button';\nimport debounce from 'lodash/debounce'\n\nclass YearSelector extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n             currentYear: new Date().getFullYear()\n        }\n    }\n\n    componentDidMount() {\n        // this.sendYear = debounce(this.sendYear, 300);\n    }\n\n    sendYear = (year) => {\n        this.props.changeState('year', year)\n    }\n\n    handleChange = (e) => {\n        let year = parseInt(e.target.value);\n        year = year < 1900 ? 1900 : year\n        year = (year > this.state.currentYear) ? this.state.currentYear : year;\n        this.sendYear(year);\n    }\n\n    render() {\n        return (\n            <div className=\"field-row-stacked\">\n                <label for=\"text21\">Select a year</label>\n                <input \n                    id=\"text21\"\n                    className=\"standard-input\"\n                    value = {this.props.year}\n                    onChange={this.handleChange}\n                    label=\"Enter Year\"\n                    placeholder=\"Enter Year\"\n                    type=\"number\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default YearSelector;\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport debounce from 'lodash/debounce'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default class UserNameInput extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            github: props.github,\n        }\n    }\n\n    componentDidMount() {\n        this.sendGithub = debounce(this.sendGithub, 300);\n    }\n\n    sendGithub = (github) => {\n        this.props.changeState('github', github);\n    }\n\n    handleChange = (e) => {\n        this.sendGithub(e.target.value);\n    }\n\n    render() {\n        const { text } = this.state;\n        return (\n            <div className=\"field-row-stacked\">\n                <label for=\"text22\">GitHub username</label>\n                <input\n                    id=\"text22\"\n                    className=\"standard-input\"\n                    onChange={this.handleChange}\n                    value={text}\n                    placeholder=\"Github\"\n                    label='Github'\n                    autoFocus=\"true\"\n                // color=\"primary\"\n                // shrink=\"true\"\n                />\n            </div>\n\n        )\n    }\n}","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport debounce from 'lodash/debounce'\n\nexport default class RepositoryInput extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.sendRepo = debounce(this.sendRepo, 300);\n    }\n\n    sendRepo = (repo) => {\n        this.props.changeState('repo', repo);\n    }\n\n    handleChange = (e) => {\n        this.sendRepo(e.target.value)\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"field-row-stacked\">\n                <label for=\"text23\">Repository Name</label>\n                <input\n                    id=\"text23\"\n                    className=\"standard-input\"\n                    onChange={this.handleChange}\n                    label=\"Repo Name\"\n                    placeholder=\"Repo Name\"\n                />\n            </div>\n\n        )\n    }\n}","\nimport React from 'react'\n\nexport default class SingleCommit extends React.Component {\n\n    handleRightClick = (e) => {\n        e.preventDefault();\n    }\n\n    render() {\n        const {commits, handleClick, id, allowDrawOnMouseOver} = this.props\n        const color = (commits[id]) ? commits[id].color : '#EBEDF0'\n        const count = (commits[id]) ? commits[id].count : 0\n        return (\n        <div className=\"commit\" \n            id={id}\n            style={{ \n            backgroundColor: color }} \n            onClick={handleClick}\n            onDragEnter={handleClick}\n            // onMouseEnter={allowDrawOnMouseOver && handleClick}\n            onContextMenu={handleClick}>{count}</div>\n        )\n    }\n}\n\n    // increaseCount = () => {\n    //     this.setState({commitsCount: this.state.commitsCount+1})\n    // }\n\n    // decreaseCount = () => {\n    //     const {commitsCount} = this.state;\n    //     commitsCount > 0 && this.setState({commitsCount: this.state.commitsCount-1})\n    // }\n\n    // handleClick = (e) => {\n    //     const {commitsData} = this.props\n    //     e.preventDefault();\n    //     const {id} = e.target\n    //     this.props.updateCommits(id)\n    //     const color = commitsData[id].color\n    //     const {commitsCount} = this.state\n    //     this.setState({clicked:true, color, commitsCount})\n    // }\n\n    // setColor = (id) => {\n    //     const max = this.props.getMaxCommits()\n    //     console.log('max in commit', max)\n    //     const commitsCount = this.props.commitsData[id];\n    //     console.log('commitscount in commit', commitsCount)\n    //     const {colorValues} = this.props;\n    //     const percent = (max==0) ? 0 : commitsCount/max * 100;\n    //     let color = '';\n\n    //     console.log('percent', percent);\n\n    //     if(percent === 0) color = colorValues.commits0\n    //     else if(percent <25) color = colorValues.commits1\n    //     else if(percent <50) color = colorValues.commits2\n    //     else if(percent <75) color = colorValues.commits3\n    //     else color = colorValues.commits4;\n    //     this.setState({color, commitsCount})\n    // }","import React from 'react'\nimport yearDays from 'year-days'\nimport SingleCommit from './SingleCommit'\n\n\nfunction getWeekday(year) {\n    //get the day of 31 dec of the year\n    const date = `${year}-12-31`\n    const dayOfWeek = new Date(date).getDay(); \n    // return isNaN(dayOfWeek) ? null : \n    // ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\n    return isNaN(dayOfWeek) ? null : (dayOfWeek+1)%7;\n}\n\nfunction getDayOfMonth(month, year) {\n    const isLeap = yearDays(parseInt(year)) === 366 ? true : false\n    const months = [\n        31, //jan\n        isLeap ? 29 : 28, //feb\n        31, //mar\n        30, //apr\n        31, //may\n        30, //jun\n        31, //jul\n        31, //aug\n        30, //sep\n        31, //oct\n        30, //nov\n        31, //dec\n    ]\n    \n    return (month>=0 && month<=12) ?  months[month-1] : null;\n}\n\nfunction CommitsBoard(props) {\n    const {handleClick, commits, allowDrawOnMouseOver} = props;\n    let {year} = props;\n    year = (year === undefined || year===null) ? 0 : year;\n    const remainingDays = getWeekday(year) //returns days remaining to render for commitsboard\n    const cellsCount = 52 * 7 + remainingDays\n    const daysOfYear = yearDays(parseInt(year));\n    let offset = cellsCount - daysOfYear;\n\n    const commitsArray = []\n    let currentDay = 1;\n    let currentMonth = 1;\n    let currentMonthDays = getDayOfMonth(currentMonth, year);\n    //render all cells\n    for(let i=0; i<53; i++) {\n        const insideAr = []\n        for(let j=0; j<7; j++) {\n            if(currentMonth >12) {\n                break;\n            }\n            if (offset >= 0) {\n                //render a dummy single commit with no props\n                insideAr.push(<SingleCommit commits={commits} id={i+j} className = \"commit\"/>)\n                offset --;\n            } else {\n                const id = `${year}-${currentMonth<10 ? '0'+currentMonth : currentMonth}-${currentDay<10 ? '0'+currentDay : currentDay}`\n                insideAr.push(<SingleCommit\n                                    className = \"commit\" \n                                    id = {id}\n                                    year={year} \n                                    handleClick={handleClick} \n                                    commits={commits} \n                                    allowDrawOnMouseOver={allowDrawOnMouseOver} />)\n                currentDay++;\n                if(currentDay > currentMonthDays) {\n                    currentDay = 1;\n                    currentMonth++;\n                    currentMonthDays = getDayOfMonth(currentMonth, year);\n                }\n            }\n        }\n\n        commitsArray.push(<div className='cols'>{insideAr}</div>)\n    }\n\n    return commitsArray\n  }\n\nexport default CommitsBoard","import React from 'react'\n\nconst TextFile = (ar) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob(ar, { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = \"gitpicasso.sh\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n}\n\n\n    const checkGithub = async (username, repo) => {\n        const response = await fetch(`https://github.com/${username}/${repo}`)\n        const status = response.status === 200 ? true : false;\n        //return false if the github credentials invalid\n        console.log('status', status)\n        return status\n    }\n\n\nfunction handleSubmit(commits, repo, github) {\n    const scriptLines = [];\n    const gitStr = 'gitpicasso'\n    scriptLines.push(`#!/bin/bash\\n`)\n    scriptLines.push(`REPO=${repo}\\n`)\n    scriptLines.push('git init $REPO\\n')\n    scriptLines.push(`cd $REPO\\n`)\n    scriptLines.push(`touch README.md\\n`)\n    scriptLines.push(`git add README.md\\n`)\n    scriptLines.push(`touch ${gitStr}\\n`)\n    scriptLines.push(`git add ${gitStr}\\n`)\n\n    //get commits key\n    //convert extract only date part\n    //no need id's already render what we need\n    //read the count\n    //run for loop for each count\n    for (let date in commits) {\n        for (let i = 0; i < commits[date].count; i++) {\n            let scriptLine = `GIT_AUTHOR_DATE=${date}T12:00:00 GIT_COMMITTER_DATE=${date}T12:00:00 git commit --allow-empty -m \"${gitStr}\" > /dev/null\\n`\n            scriptLines.push(scriptLine)\n        }\n    }\n    scriptLines.push(`git remote add origin git@github.com:${github}/$REPO.git\\n`)\n    scriptLines.push(`git pull origin master --allow-unrelated-histories\\n`)\n    scriptLines.push('git push -u origin master\\n')\n\n\n    TextFile(scriptLines);\n    return scriptLines;\n}\n/*\n2020-01-01-commit: {count: 3, color: \"#216E39\"}\n2020-01-08-commit: {count: 1, color: \"#40C462\"}\n2020-03-16-commit: {count: 1, color: \"#40C462\"}\n2020-04-09-commit: {count: 3, color: \"#216E39\"}\n2020-04-19-commit: {count: 2, color: \"#30A14E\"}\n2020-06-16-commit: {count: 3, color: \"#216E39\"}\n*/\n\n\nfunction GenerateScript(props) {\n\n    const { commits, repo, github } = props;\n\n    if (!commits || !repo || !github) {\n        return (\n            <div class=\"window-body\" className=\"errorMsg\">\n                <h4>Please fill out all the fields</h4>\n          </div>\n\n        )\n    }\n    return (\n        <div>\n            <button className=\"generate-btn\" onClick={\n                () => handleSubmit(commits, repo, github)\n            }>Generate the Script</button>\n\n        </div>\n\n    )\n}\n\nexport default GenerateScript","import React from 'react'\n\nexport default function Navigation() {\n    return <nav>\n        <ul>\n            {/* <li>How to Use</li>\n            <li>About</li> */}\n            <li><a href=\"https://github.com/aliqsson-greenborders/github-picasso\">GitHub</a></li>\n        </ul>\n    </nav>\n}","import React from 'react'\n\nexport default () => {\n    return (\n    <div className=\"taskbar\">\n        <div className=\"start\"></div>\n    </div>\n    )\n}","import React from \"react\";\nimport { config } from \"dotenv\";\nimport YearSelector from \"./components/YearSelector\";\nimport UsernameInput from \"./components/UsernameInput\";\nimport RepositoryInput from \"./components/RepositoryInput\";\nimport \"./App.css\";\nimport CommitsBoard from \"./components/CommitsBoard\";\nimport GenerateScript from \"./components/GenerateScript\";\nimport Navigation from \"./components/Navigation\";\nimport Taskbar from \"./components/Taskbar\";\nimport ReactDOM, { findDomNode, unmountComponentAtNode } from \"react-dom\";\n\nconst maximizedStyle = {\n  position: \"fixed\",\n  top: \"0\",\n  left: \"0\",\n  width: \"100vw\",\n  height: \"100vh\",\n  margin: \"0\",\n};\n\nconst normalStyle = {\n  position: \"static\",\n  height: \"auto\",\n  width: \"80%\",\n  margin:\"auto\"\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentStyle: normalStyle,\n      toggle: false,\n      allowDrawOnMouseOver: false,\n      isWrongInput: false,\n      github: \"\",\n      year: \"2020\",\n      repo: \"\",\n      isValidGithub: false,\n      isValidYear: false,\n      isValidRepo: false,\n      commits: {},\n      minCommits: 0,\n      maxCommits: 0,\n      maxFreq: 0,\n\n      colorValues: {\n        commits0: \"#EBEDF0\",\n        commits1: \"#9BE9A8\",\n        commits2: \"#40C462\",\n        commits3: \"#30A14E\",\n        commits4: \"#216E39\",\n      },\n    };\n  }\n\n  componentDidMount() {}\n\n  getColorGroup = (commitsCount) => {\n    const { maxCommits, colorValues } = this.state;\n    const percent = !commitsCount ? 0 : (commitsCount / maxCommits) * 100;\n    let color;\n    if (percent === 0) color = colorValues.commits0;\n    else if (percent < 25) color = colorValues.commits1;\n    else if (percent < 50) color = colorValues.commits2;\n    else if (percent < 75) color = colorValues.commits3;\n    else color = colorValues.commits4;\n    return color;\n  };\n\n  handleClick = (e) => {\n    const eventType = e.type;\n    e.preventDefault();\n    const { id } = e.target;\n    const { commits } = this.state;\n    let { maxCommits, maxFreq } = this.state;\n    if (commits[id]) {\n      if (commits[id].count === 10 && eventType !== \"contextmenu\") return;\n      if (eventType === \"contextmenu\" && commits[id].count > 0) {\n        commits[id].count--;\n      } else commits[id].count++;\n    } else {\n      commits[id] = {};\n      eventType === \"contextmenu\"\n        ? (commits[id].count = 0)\n        : (commits[id].count = 1);\n    }\n    commits[id].color = this.getColorGroup(commits[id].count);\n\n    if (commits[id].count > maxCommits) {\n      maxCommits = commits[id].count;\n      this.setState({\n        maxCommits,\n      });\n      this.rerenderColors();\n    }\n    this.setState({\n      commits,\n    });\n  };\n\n  rerenderColors = () => {\n    const { commits } = this.state;\n    for (let key in commits) {\n      commits[key].color = this.getColorGroup(commits[key].count);\n    }\n    this.setState(commits);\n  };\n\n  changeState = (key, value) => {\n    this.setState({\n      [key]: value,\n    });\n  };\n\n  maximize = () => {\n    const { toggle } = this.state;\n    toggle\n      ? this.setState({ currentStyle: normalStyle, toggle: !this.state.toggle })\n      : this.setState({\n          currentStyle: maximizedStyle,\n          toggle: !this.state.toggle,\n        });\n  };\n\n  close = () => {\n    document.querySelector(\".window\").style.display = \"none\";\n  };\n  render() {\n    const {\n      github,\n      year,\n      repo,\n      commits,\n      maxCommits,\n      inputCompleted,\n      allowDrawOnMouseOver,\n      currentStyle,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <div className=\"window\" style={currentStyle}>\n          <div className=\"title-bar\">\n            <div className=\"title-bar-text\">\n              {\" \"}\n              Turn your GitHub into an Artboard{\" \"}\n            </div>{\" \"}\n            <div class=\"title-bar-controls\">\n              <button aria-label=\"Minimize\"></button>\n              <button aria-label=\"Maximize\" onClick={this.maximize}></button>\n              <button aria-label=\"Close\" onClick={this.close}></button>\n            </div>\n          </div>\n          <div className=\"window-body\">\n            <div className=\"inputs\" disabled>\n              <UsernameInput github={github} changeState={this.changeState} />{\" \"}\n              <YearSelector year={year} changeState={this.changeState} />{\" \"}\n              <RepositoryInput repo={repo} changeState={this.changeState} />{\" \"}\n            </div>{\" \"}\n            <div className=\"commits-board\">\n              <CommitsBoard\n                handleClick={this.handleClick}\n                commits={commits}\n                year={year}\n                allowDrawOnMouseOver={allowDrawOnMouseOver}\n              />{\" \"}\n              <div>\n                {/* <input\n                  type=\"checkbox\"\n                  value=\"checkbox\"\n                  name=\"allowmouseover\"\n                  onChange={() => {\n                    const { allowDrawOnMouseOver } = this.state;\n                    this.setState({\n                      allowDrawOnMouseOver: !allowDrawOnMouseOver,\n                    });\n                  }}\n                />{\" \"} */}\n                {/* <label for=\"allowmouseover\"> Draw on MouseOver </label>{\" \"} */}\n              </div>{\" \"}\n              <div>\n                <GenerateScript commits={commits} github={github} repo={repo} />{\" \"}\n              </div>{\" \"}\n              <footer className='pre'>\n                  Microsoft&#10094;R&#10095; Windows DOS &#10094;C&#10095;\n                  Copyright Microsoft Corp 1990-2001.\n                  <br />\n                  C:&#92;WINDOWS&#92;SYSTEM32> You can build a command line\n                  easily with a window and pre tag\n              </footer>\n            </div>{\" \"}\n          </div>\n\n          <br />\n        </div>\n        <Taskbar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}